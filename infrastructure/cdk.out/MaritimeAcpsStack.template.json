{
 "Resources": {
  "DataBucketE3889A50": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "maritime-acps-data-334682688228",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Id": "ArchiveOldData",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "GLACIER",
         "TransitionInDays": 30
        }
       ]
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/DataBucket/Resource"
   }
  },
  "FrontendBucketEFE2E19C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "maritime-acps-frontend-334682688228",
    "WebsiteConfiguration": {
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/FrontendBucket/Resource"
   }
  },
  "FrontendBucketPolicy1DFF75D9": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "FrontendBucketEFE2E19C"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "FrontendBucketEFE2E19C",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/FrontendBucket/Policy/Resource"
   }
  },
  "EventsTableD24865E5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "event_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "event_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "TableName": "maritime-events"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/EventsTable/Resource"
   }
  },
  "TelemetryStream9D62E5EC": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "Name": "maritime-telemetry",
    "RetentionPeriodHours": 24,
    "ShardCount": 2,
    "StreamEncryption": {
     "Fn::If": [
      "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
      {
       "Ref": "AWS::NoValue"
      },
      {
       "EncryptionType": "KMS",
       "KeyId": "alias/aws/kinesis"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/TelemetryStream/Resource"
   }
  },
  "IoTPolicy": {
   "Type": "AWS::IoT::Policy",
   "Properties": {
    "PolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Action": [
        "iot:Connect",
        "iot:Publish",
        "iot:Subscribe",
        "iot:Receive"
       ],
       "Resource": "*"
      }
     ]
    },
    "PolicyName": "MaritimeDevicePolicy"
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/IoTPolicy"
   }
  },
  "FusionFunctionServiceRoleA3BC9750": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/FusionFunction/ServiceRole/Resource"
   }
  },
  "FusionFunctionServiceRoleDefaultPolicy85374C46": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventsTableD24865E5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "kinesis:DescribeStreamSummary",
        "kinesis:GetRecords",
        "kinesis:GetShardIterator",
        "kinesis:ListShards",
        "kinesis:SubscribeToShard",
        "kinesis:DescribeStream",
        "kinesis:ListStreams",
        "kinesis:DescribeStreamConsumer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TelemetryStream9D62E5EC",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FusionFunctionServiceRoleDefaultPolicy85374C46",
    "Roles": [
     {
      "Ref": "FusionFunctionServiceRoleA3BC9750"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/FusionFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "FusionFunction3F401BFF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-334682688228-us-east-1",
     "S3Key": "19c6d56a7c2bfe33058f90aa573e00a1561e4500141e1faef4007c9436519ecf.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "FusionFunctionServiceRoleA3BC9750",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "EVENTS_TABLE": {
       "Ref": "EventsTableD24865E5"
      },
      "KINESIS_STREAM": {
       "Ref": "TelemetryStream9D62E5EC"
      }
     }
    },
    "Handler": "fusion.handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "FusionFunctionServiceRoleDefaultPolicy85374C46",
    "FusionFunctionServiceRoleA3BC9750"
   ],
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/FusionFunction/Resource",
    "aws:asset:path": "asset.19c6d56a7c2bfe33058f90aa573e00a1561e4500141e1faef4007c9436519ecf",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/Resource"
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet1/Subnet"
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet1/RouteTable"
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet1/DefaultRoute"
   }
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet1/EIP"
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ],
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet1/NATGateway"
   }
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet2/Subnet"
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet2/RouteTable"
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet2/DefaultRoute"
   }
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet2/EIP"
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ],
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PublicSubnet2/NATGateway"
   }
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet1/Subnet"
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet1/RouteTable"
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet2/Subnet"
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet2/RouteTable"
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MaritimeAcpsStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/VPC/VPCGW"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/Cluster/Resource"
   }
  },
  "TaskDefTaskRole1EDB4A67": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/TaskDef/TaskRole/Resource"
   }
  },
  "TaskDef54694570": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "EVENTS_TABLE",
        "Value": {
         "Ref": "EventsTableD24865E5"
        }
       }
      ],
      "Essential": true,
      "Image": "maritime-planner:latest",
      "Name": "planner",
      "PortMappings": [
       {
        "ContainerPort": 8000,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "Family": "MaritimeAcpsStackTaskDef7F35044D",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskDefTaskRole1EDB4A67",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/TaskDef/Resource"
   }
  },
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameAttributes": [
     "email"
    ],
    "UserPoolName": "maritime-operators",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/UserPool/Resource"
   }
  },
  "UserPoolClient2F5918F7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    },
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/UserPoolClient/Resource"
   }
  },
  "DistributionCFDistribution882A7313": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "ForwardedValues": {
       "Cookies": {
        "Forward": "none"
       },
       "QueryString": false
      },
      "TargetOriginId": "origin1",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "DomainName": {
        "Fn::GetAtt": [
         "FrontendBucketEFE2E19C",
         "RegionalDomainName"
        ]
       },
       "Id": "origin1",
       "S3OriginConfig": {}
      }
     ],
     "PriceClass": "PriceClass_100",
     "ViewerCertificate": {
      "CloudFrontDefaultCertificate": true
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/Distribution/CFDistribution"
   }
  },
  "SageMakerRoleD4FCFA3F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "sagemaker.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSageMakerFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/SageMakerRole/Resource"
   }
  },
  "SageMakerRoleDefaultPolicyF52470B8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SageMakerRoleDefaultPolicyF52470B8",
    "Roles": [
     {
      "Ref": "SageMakerRoleD4FCFA3F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/SageMakerRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12Sy1LDMAxFv4W9a6Bd0C20lGEDmfJaMoqjFjWJzfgB08n435HjpOmw0tH1tXKjZC6XN/LqAn7dTFX1rKFSdi8eVC1Y+uzcQnZ3QdXoxWqnB8qlMA2p4yQPfW7uwGEU1VFDayoe+Qplg8nbQxQ1aXTk0rMsQptOMkVBxktuh3ENtGUFstsErTwZnZwjsxda2W1NHt3XKVWmKNziE5xD7+RtKgLVXHbv3yp53ouVKELJxpdQ6vySE21N8HhKnvVJ42lGEYyh+oME949FKk/gH8DjLxxFYemHcRr8qD1a5tGQkwzdref1f7WofeSsvKJVExz7k2vEDdg9pByuXuOONI0p/itGe+BV20mLQpk9o5Hdm0NbGNOkiyceYdUQRzg/ygrfb0yodpZHp2zMm8QfWK7JeUtlGMOc9zGKLToTrOqXxMGqHLH/KPzH7Unv08lz8N8hr3/wR6FNhfLgLn+ul3J+JZcXB0c0s0F7alFuc/0DqE5Nj8oCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MaritimeAcpsStack/CDKMetadata/Default"
   }
  }
 },
 "Conditions": {
  "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
   "Fn::Or": [
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "cn-north-1"
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "cn-northwest-1"
     ]
    }
   ]
  }
 },
 "Outputs": {
  "DataBucketName": {
   "Value": {
    "Ref": "DataBucketE3889A50"
   }
  },
  "FrontendURL": {
   "Value": {
    "Fn::GetAtt": [
     "DistributionCFDistribution882A7313",
     "DomainName"
    ]
   }
  },
  "UserPoolId": {
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   }
  },
  "UserPoolClientId": {
   "Value": {
    "Ref": "UserPoolClient2F5918F7"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}